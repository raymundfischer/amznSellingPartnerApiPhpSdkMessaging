<?php
/**
 * MessagingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  amznSellingPartnerApiPhpSdk\Messaging
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.22
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace amznSellingPartnerApiPhpSdk\Messaging;

use amznSellingPartnerApiPhpSdk\Messaging\Configuration;
use amznSellingPartnerApiPhpSdk\Messaging\ApiException;
use amznSellingPartnerApiPhpSdk\Messaging\ObjectSerializer;

/**
 * MessagingApiTest Class Doc Comment
 *
 * @category Class
 * @package  amznSellingPartnerApiPhpSdk\Messaging
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MessagingApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for confirmCustomizationDetails
     *
     * .
     *
     */
    public function testConfirmCustomizationDetails()
    {
    }

    /**
     * Test case for createAmazonMotors
     *
     * .
     *
     */
    public function testCreateAmazonMotors()
    {
    }

    /**
     * Test case for createConfirmDeliveryDetails
     *
     * .
     *
     */
    public function testCreateConfirmDeliveryDetails()
    {
    }

    /**
     * Test case for createConfirmOrderDetails
     *
     * .
     *
     */
    public function testCreateConfirmOrderDetails()
    {
    }

    /**
     * Test case for createConfirmServiceDetails
     *
     * .
     *
     */
    public function testCreateConfirmServiceDetails()
    {
    }

    /**
     * Test case for createDigitalAccessKey
     *
     * .
     *
     */
    public function testCreateDigitalAccessKey()
    {
    }

    /**
     * Test case for createLegalDisclosure
     *
     * .
     *
     */
    public function testCreateLegalDisclosure()
    {
    }

    /**
     * Test case for createNegativeFeedbackRemoval
     *
     * .
     *
     */
    public function testCreateNegativeFeedbackRemoval()
    {
    }

    /**
     * Test case for createUnexpectedProblem
     *
     * .
     *
     */
    public function testCreateUnexpectedProblem()
    {
    }

    /**
     * Test case for createWarranty
     *
     * .
     *
     */
    public function testCreateWarranty()
    {
    }

    /**
     * Test case for getAttributes
     *
     * .
     *
     */
    public function testGetAttributes()
    {
    }

    /**
     * Test case for getMessagingActionsForOrder
     *
     * .
     *
     */
    public function testGetMessagingActionsForOrder()
    {
    }
}
